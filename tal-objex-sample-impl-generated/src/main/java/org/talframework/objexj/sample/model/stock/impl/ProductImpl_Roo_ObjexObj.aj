// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.talframework.objexj.sample.model.stock.impl;

import java.lang.String;
import java.util.Date;
import org.talframework.objexj.object.BaseObjexObj;
import org.talframework.objexj.object.StateBeanUtils;
import org.talframework.objexj.sample.beans.stock.ProductBean;

privileged aspect ProductImpl_Roo_ObjexObj {
    
    declare parents: ProductImpl extends BaseObjexObj;
    
    public ProductBean ProductImpl.getLocalState() {
        return bean;
    }
    
    public String ProductImpl.getName() {
        java.lang.String rawValue = bean.getName();
        return rawValue;
    }
    
    public void ProductImpl.setName(String val) {
        java.lang.String rawValue = val;
        if( !StateBeanUtils.hasChanged(bean.getName(), rawValue) ) return;
        ensureUpdateable(bean);
        bean.setName(rawValue);
    }
    
    public String ProductImpl.getDescription() {
        java.lang.String rawValue = bean.getDescription();
        return rawValue;
    }
    
    public void ProductImpl.setDescription(String val) {
        java.lang.String rawValue = val;
        if( !StateBeanUtils.hasChanged(bean.getDescription(), rawValue) ) return;
        ensureUpdateable(bean);
        bean.setDescription(rawValue);
    }
    
    public Date ProductImpl.getEffectiveFrom() {
        java.util.Date rawValue = bean.getEffectiveFrom();
        return rawValue;
    }
    
    public void ProductImpl.setEffectiveFrom(Date val) {
        java.util.Date rawValue = val;
        if( !StateBeanUtils.hasChanged(bean.getEffectiveFrom(), rawValue) ) return;
        ensureUpdateable(bean);
        bean.setEffectiveFrom(rawValue);
    }
    
    public Date ProductImpl.getEffectiveTo() {
        java.util.Date rawValue = bean.getEffectiveTo();
        return rawValue;
    }
    
    public void ProductImpl.setEffectiveTo(Date val) {
        java.util.Date rawValue = val;
        if( !StateBeanUtils.hasChanged(bean.getEffectiveTo(), rawValue) ) return;
        ensureUpdateable(bean);
        bean.setEffectiveTo(rawValue);
    }
    
    public double ProductImpl.getPrice() {
        double rawValue = bean.getPrice();
        return cloneValue(rawValue);
    }
    
    public void ProductImpl.setPrice(double val) {
        double rawValue = val;
        if( !StateBeanUtils.hasChanged(bean.getPrice(), rawValue) ) return;
        ensureUpdateable(bean);
        bean.setPrice(rawValue);
    }
    
    public String ProductImpl.getCurrency() {
        java.lang.String rawValue = bean.getCurrency();
        return rawValue;
    }
    
    public void ProductImpl.setCurrency(String val) {
        java.lang.String rawValue = val;
        if( !StateBeanUtils.hasChanged(bean.getCurrency(), rawValue) ) return;
        ensureUpdateable(bean);
        bean.setCurrency(rawValue);
    }
    
}
